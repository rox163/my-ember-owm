{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","kci/tests/app.lint-test.js","kci/tests/helpers/destroy-app.js","kci/tests/helpers/module-for-acceptance.js","kci/tests/helpers/resolver.js","kci/tests/helpers/start-app.js","kci/tests/test-helper.js","kci/tests/tests.lint-test.js","kci/tests/unit/pods/dashboard/route-test.js","kci/tests/unit/utils/country-code-convertor-test.js","kci/tests/unit/utils/random-in-range-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('kci/tests/app.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pods/dashboard/controller.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'pods/dashboard/controller.js should pass ESLint\\n\\n45:3 - Parsing error: Unexpected character \\'@\\' (null)');\n  });\n\n  QUnit.test('pods/dashboard/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/dashboard/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/country-code-convertor.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/country-code-convertor.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/random-in-range.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/random-in-range.js should pass ESLint\\n\\n');\n  });\n});","define('kci/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('kci/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'kci/tests/helpers/start-app', 'kci/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _kciTestsHelpersStartApp, _kciTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _kciTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _kciTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('kci/tests/helpers/resolver', ['exports', 'kci/resolver', 'kci/config/environment'], function (exports, _kciResolver, _kciConfigEnvironment) {\n\n  var resolver = _kciResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _kciConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _kciConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('kci/tests/helpers/start-app', ['exports', 'ember', 'kci/app', 'kci/config/environment'], function (exports, _ember, _kciApp, _kciConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var attributes = _ember['default'].merge({}, _kciConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    return _ember['default'].run(function () {\n      var application = _kciApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('kci/tests/test-helper', ['exports', 'kci/tests/helpers/resolver', 'ember-qunit'], function (exports, _kciTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_kciTestsHelpersResolver['default']);\n});","define('kci/tests/tests.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/pods/dashboard/route-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/pods/dashboard/route-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/country-code-convertor-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/country-code-convertor-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/utils/random-in-range-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/random-in-range-test.js should pass ESLint\\n\\n');\n  });\n});","define('kci/tests/unit/pods/dashboard/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:dashboard', 'Unit | Route | dashboard', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('kci/tests/unit/utils/country-code-convertor-test', ['exports', 'kci/utils/country-code-convertor', 'qunit'], function (exports, _kciUtilsCountryCodeConvertor, _qunit) {\n\n  (0, _qunit.module)('Unit | Utility | country code convertor');\n\n  (0, _qunit.test)('Can find country code from name', function (assert) {\n    var result = (0, _kciUtilsCountryCodeConvertor.getCountryCode)('Canada');\n    assert.equal(result, 'CA', 'Country code found correctly');\n  });\n\n  (0, _qunit.test)('Can find country name from code', function (assert) {\n    var result = (0, _kciUtilsCountryCodeConvertor.getCountryName)('CA');\n    assert.equal(result, 'Canada', 'Country name found correctly');\n  });\n});","define('kci/tests/unit/utils/random-in-range-test', ['exports', 'kci/utils/random-in-range', 'qunit'], function (exports, _kciUtilsRandomInRange, _qunit) {\n\n  (0, _qunit.module)('Unit | Utility | random in range');\n\n  (0, _qunit.test)('Number is within range', function (assert) {\n    var result = (0, _kciUtilsRandomInRange['default'])(-10, 10, 3);\n    assert.ok(result > -10 && result < 10, 'Number generated is within specified range');\n  });\n});","require('kci/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;","file":"tests.js"}